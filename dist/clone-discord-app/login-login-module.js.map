{"version":3,"sources":["./src/app/login/login.module.ts","./src/app/login/login-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import {CommonModule}        from \"@angular/common\";\nimport {NgModule}            from \"@angular/core\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {NgxMaskModule}       from \"ngx-mask\";\nimport {AlertModule}         from \"../../@layouts/alert/alert.module\";\nimport {ButtonModule}        from \"../../@layouts/button/button.module\";\nimport {CardModule}          from \"../../@layouts/card/card.module\";\nimport {FieldrowModule}      from \"../../@layouts/fieldrow/fieldrow.module\";\n\nimport {LoginRoutingModule} from \"./login-routing.module\";\nimport {LoginComponent}     from \"./login.component\";\n\n\n@NgModule({\n    declarations: [LoginComponent],\n    imports: [\n        CommonModule,\n        LoginRoutingModule,\n        ButtonModule,\n        FieldrowModule,\n        CardModule,\n        AlertModule,\n        NgxMaskModule.forRoot(),\n        ReactiveFormsModule,\n    ]\n})\nexport class LoginModule {\n}\n","import {NgModule}             from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {HttpRoutingGuard}     from \"../../@core/http-client/http.routing.guard\";\nimport {LoginComponent}       from \"./login.component\";\n\nconst routes: Routes = [\n    {path: \"\", component: LoginComponent, data: HttpRoutingGuard.needsCredentials(false)}\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class LoginRoutingModule {\n}\n","import {AfterViewInit, Component, ElementRef, OnInit, ViewChild} from \"@angular/core\";\nimport {FormControl, FormGroup, Validators}                      from \"@angular/forms\";\nimport {Router}                                   from \"@angular/router\";\nimport {__nativeWindow}                           from \"../../@core/helpers/functions\";\nimport {AuthStorage}                              from \"../../@core/helpers/storage\";\nimport {LoginService}                             from \"../../@core/services/login.service\";\n\n@Component({\n    selector: \"app-login\",\n    templateUrl: \"./login.component.html\",\n    styleUrls: [\"./login.component.scss\"]\n})\nexport class LoginComponent implements OnInit {\n\n    public submitLoading: boolean = false;\n\n    public errorMessage?: string | undefined | null;\n\n    public successMessage?: string | undefined | null;\n\n    public payload: FormGroup = new FormGroup({\n        cpf: new FormControl(\"\", [Validators.required, Validators.minLength(14)]),\n        password: new FormControl(\"\", [Validators.required, Validators.minLength(6)]),\n    });\n\n    constructor(private router: Router, private loginService: LoginService) {\n    }\n\n    ngOnInit(): void {\n\n        let newUser = __nativeWindow().history.state?.newUser;\n\n        if (newUser && newUser.id) {\n            this.successMessage = \"Conta criada com sucesso!\";\n        }\n\n    }\n\n    get cpf() {\n        return this.payload.get(\"cpf\");\n    }\n\n    get password() {\n        return this.payload.get(\"password\");\n    }\n\n    public informError(message: string) {\n        this.payload.reset();\n        this.errorMessage = message;\n        this.successMessage = undefined;\n    }\n\n    public submit() {\n\n        if (!this.payload.valid) {\n            this.payload.markAllAsTouched();\n            return;\n        }\n\n        this.submitLoading = true;\n\n        this.loginService.login(this.payload.getRawValue()).subscribe(httpResponse => {\n\n            if (httpResponse.success && httpResponse.content) {\n                AuthStorage.setToken(httpResponse.content);\n                this.router.navigate([\"/chat\"]);\n            } else {\n                this.informError(\"Ops, aconteceu algum problema, tente novamente mais tarde!\");\n            }\n\n            this.submitLoading = false;\n\n        }, httpErrorResponse => {\n\n            if (httpErrorResponse?.error?.errors[0]?.message === \"Invalid user credentials\") {\n                this.informError(\"CPF ou senha incorretos!\");\n            } else {\n                this.informError(\"Ops, aconteceu algum problema, tente novamente mais tarde!\");\n            }\n\n            this.submitLoading = false;\n\n        });\n    }\n\n}\n","<form [formGroup]=\"payload\" (ngSubmit)=\"submit()\">\n    <app-card title=\"FaÃ§a seu login\">\n        <div card-content>\n            <div *ngIf=\"successMessage && successMessage.length >= 1\" class=\"row\">\n                <div class=\"col-xs-12\">\n                    <app-alert class=\"alert-success\">\n                        {{successMessage}}\n                    </app-alert>\n                </div>\n            </div>\n            <div *ngIf=\"errorMessage && errorMessage.length >= 1\" class=\"row\">\n                <div class=\"col-xs-12\">\n                    <app-alert class=\"alert-danger\">\n                        {{errorMessage}}\n                    </app-alert>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <app-fieldrow label=\"CPF\" [abstractControl]=\"cpf\">\n                        <input type=\"text\" name=\"cpf\" [mask]=\"'000.000.000-00'\" [dropSpecialCharacters]=\"false\" placeholder=\"CPF\" formControlName=\"cpf\"/>\n                    </app-fieldrow>\n                </div>\n                <div class=\"col-xs-12\">\n                    <app-fieldrow label=\"Senha\" [abstractControl]=\"password\">\n                        <input type=\"password\" name=\"password\" placeholder=\"Senha\" formControlName=\"password\" autocomplete=\"off\"/>\n                    </app-fieldrow>\n                </div>\n            </div>\n        </div>\n        <div card-footer>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <app-button type=\"submit\" [loading]=\"submitLoading\" class=\"btn-block btn-secondary\">Continuar</app-button>\n                    <p class=\"register\">\n                        Precisando de uma conta? <a [routerLink]=\"['/register']\">Registre-se</a>\n                    </p>\n                </div>\n            </div>\n        </div>\n    </app-card>\n</form>\n"],"sourceRoot":"webpack:///"}