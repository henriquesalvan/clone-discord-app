{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/register/register-routing.module.ts","./src/@core/services/register.service.ts","./src/app/register/register.module.ts"],"names":[],"mappings":"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","file":"register-register-module.js","sourcesContent":["import {Component, OnInit}                                                                       from \"@angular/core\";\nimport {AbstractControl, AsyncValidatorFn, FormControl, FormGroup, ValidationErrors, Validators} from \"@angular/forms\";\nimport {Router}                                                                                  from \"@angular/router\";\nimport {Observable, of}                                                                          from \"rxjs\";\nimport {catchError, map}                                                                         from \"rxjs/operators\";\nimport {HttpResponseInterface}                                                                   from \"../../@core/interfaces/http.response.interface\";\nimport {RegisterService}                                                                         from \"../../@core/services/register.service\";\n\n@Component({\n    selector: \"app-register\",\n    templateUrl: \"./register.component.html\",\n    styleUrls: [\"./register.component.scss\"],\n    providers: [RegisterService]\n})\nexport class RegisterComponent implements OnInit {\n\n    public submitLoading: boolean = false;\n\n    public errorMessage?: string | undefined | null;\n\n    public payload: FormGroup = new FormGroup({\n        name: new FormControl(\"\", [Validators.required, Validators.minLength(4)]),\n        password: new FormControl(\"\", [Validators.required, Validators.minLength(6)]),\n        cpf: new FormControl(\"\", {\n            validators: [Validators.required, Validators.minLength(14)],\n            asyncValidators: this.validationUniqueCpf(),\n            updateOn: \"blur\"\n        }),\n    });\n\n    constructor(private registerService: RegisterService, private router: Router) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    get name() {\n        return this.payload.get(\"name\");\n    }\n\n    get cpf() {\n        return this.payload.get(\"cpf\");\n    }\n\n    get password() {\n        return this.payload.get(\"password\");\n    }\n\n    private validationUniqueCpf(): AsyncValidatorFn {\n\n        return (control: AbstractControl): Observable<ValidationErrors | null> => {\n\n            let mapHttpResponse = (httpResponse: HttpResponseInterface<{ exists: boolean }>) => {\n                if (httpResponse.success && httpResponse?.content?.exists) {\n                    return {anotherUserAlreadyTaken: true};\n                } else {\n                    return null;\n                }\n            };\n\n            return this.registerService.userExistsByCPF(control.value).pipe(\n                map(mapHttpResponse), catchError(() => of(null))\n            );\n\n        };\n\n    }\n\n    public informError(message: string) {\n        this.payload.reset();\n        this.errorMessage = message;\n    }\n\n    public submit() {\n\n        if (!this.payload.valid) {\n            this.payload.markAllAsTouched();\n            return;\n        }\n\n        this.submitLoading = true;\n\n        this.registerService.register(this.payload.getRawValue()).subscribe(httpResponse => {\n\n            if (httpResponse.success && httpResponse.content) {\n                this.router.navigate([\"/login\"], {state: {newUser: httpResponse.content}});\n            } else {\n                this.informError(\"Ops, aconteceu algum problema, tente novamente mais tarde!\");\n            }\n\n            this.submitLoading = false;\n\n        }, httpErrorResponse => {\n\n            this.informError(\"Ops, aconteceu algum problema, tente novamente mais tarde!\");\n            this.submitLoading = false;\n\n        });\n    }\n\n}\n","<form [formGroup]=\"payload\" (ngSubmit)=\"submit()\">\n    <app-card title=\"Crie sua conta\">\n        <div card-content>\n            <div *ngIf=\"errorMessage && errorMessage.length >= 1\" class=\"row\">\n                <div class=\"col-xs-12\">\n                    <app-alert class=\"alert-danger\">\n                        {{errorMessage}}\n                    </app-alert>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <app-fieldrow label=\"Nome Completo\" [abstractControl]=\"name\">\n                        <input type=\"text\" name=\"name\" placeholder=\"Nome Completo\" formControlName=\"name\"/>\n                    </app-fieldrow>\n                </div>\n                <div class=\"col-xs-12\">\n                    <app-fieldrow label=\"CPF\" [abstractControl]=\"cpf\">\n                        <input type=\"text\" [mask]=\"'000.000.000-00'\" [dropSpecialCharacters]=\"false\" name=\"cpf\" placeholder=\"CPF\" formControlName=\"cpf\"/>\n                    </app-fieldrow>\n                </div>\n                <div class=\"col-xs-12\">\n                    <app-fieldrow label=\"Senha\" [abstractControl]=\"password\">\n                        <input type=\"password\" name=\"password\" placeholder=\"Senha\" formControlName=\"password\" autocomplete=\"off\"/>\n                    </app-fieldrow>\n                </div>\n            </div>\n        </div>\n        <div card-footer>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <app-button type=\"submit\" [loading]=\"false\" class=\"btn-block btn-secondary\">Criar Agora</app-button>\n                    <p class=\"login\">\n                        <a [routerLink]=\"['/login']\">Já tem uma conta?</a>\n                    </p>\n                </div>\n            </div>\n        </div>\n    </app-card>\n</form>\n","import {NgModule}             from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {HttpRoutingGuard}     from \"../../@core/http-client/http.routing.guard\";\nimport {RegisterComponent}    from \"./register.component\";\n\nconst routes: Routes = [\n    {path: \"\", component: RegisterComponent, data: HttpRoutingGuard.needsCredentials(false)}\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class RegisterRoutingModule {\n}\n","import {Injectable}            from \"@angular/core\";\nimport {Observable}            from \"rxjs\";\nimport {HttpResponseInterface} from \"../interfaces/http.response.interface\";\nimport {UserInterface}         from \"../interfaces/models/user.interface\";\nimport {HttpService}           from \"./http.service\";\n\n@Injectable()\nexport class RegisterService extends HttpService<UserInterface> {\n\n    resource() {\n        return \"auth\";\n    }\n\n    register(user: UserInterface): Observable<HttpResponseInterface<UserInterface>> {\n        return this.httpClient.post<HttpResponseInterface<UserInterface>>(`${this.uri}/register`, user);\n    }\n\n    userExistsByCPF(cpf: string): Observable<HttpResponseInterface<{ exists: boolean }>> {\n        return this.httpClient.post<HttpResponseInterface<{ exists: boolean }>>(`${this.uri}/register/checkCPF`, {cpf: cpf});\n    }\n\n}\n","import {CommonModule}        from \"@angular/common\";\nimport {NgModule}            from \"@angular/core\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {NgxMaskModule}       from \"ngx-mask\";\nimport {AlertModule}         from \"../../@layouts/alert/alert.module\";\nimport {ButtonModule}        from \"../../@layouts/button/button.module\";\nimport {CardModule}          from \"../../@layouts/card/card.module\";\nimport {FieldrowModule}      from \"../../@layouts/fieldrow/fieldrow.module\";\n\nimport {RegisterRoutingModule} from \"./register-routing.module\";\nimport {RegisterComponent}     from \"./register.component\";\n\n\n@NgModule({\n    declarations: [RegisterComponent],\n    imports: [\n        CommonModule,\n        RegisterRoutingModule,\n        ButtonModule,\n        FieldrowModule,\n        CardModule,\n        AlertModule,\n        NgxMaskModule.forRoot(),\n        ReactiveFormsModule,\n    ]\n})\nexport class RegisterModule {\n}\n"],"sourceRoot":"webpack:///"}